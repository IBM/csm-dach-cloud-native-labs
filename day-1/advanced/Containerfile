# Node.js 14.18.1
FROM redhat/ubi8@sha256:737eafb6d1bd51655b661ac25f1e048c02f722cf00d2942150c1ca77a44f0b64
# The FROM command tell us which is the base image. Using the digest (@sha...) we uniquely and immutably identify a container image.
# https://hub.docker.com/layers/redhat/ubi8/8.5-200/images/sha256-737eafb6d1bd51655b661ac25f1e048c02f722cf00d2942150c1ca77a44f0b64?context=explore

LABEL author="Raphael Tholl raphael.tholl@ibm.com"
# The LABEL is optional but useful to provide information about the image

WORKDIR /var/www/html
# The WORKDIR command creates a folder inside the container and sets the working directory for all subsequent instructions.

COPY index.html /var/www/html/
# The COPY command copies files from the host into the container image. COPY <hostPath> <containerPath>

RUN yum install -y httpd &&\
    yum clean all
# The RUN command is executed during build
# Each RUN command adds a layer to the image, so it's a good practice to use && to combine commands 

RUN groupadd -r appuser &&\
    useradd -r appuser -g appuser -s /sbin/nologin -c "Non-root user to run application"
# It is considered best practice to not run your applications as root inside the container. Thus create a new user for your application

USER appuser
# The USER runs all subsequent instructions as the provided user.

EXPOSE 80
# The EXPOSE command says which port on the container should be exposed (metadata only)

ENTRYPOINT ["httpd"]
# The ENTRYPOINT is the command to be executed on the container when it is started 
# The entrypoint can't be overriden

CMD ["-D", "FOREGROUND"]
# The CMD command provides the parameters for the command specified in ENTRYPOINT
# The arguments can be overriden by passing them at the end of _podman run_